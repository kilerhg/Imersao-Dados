# -*- coding: utf-8 -*-
"""Aula01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pmd9ElSTnIaKwZuYpmoFUBReRO_th0Xd
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
fonte = "https://github.com/alura-cursos/imersao-dados-2-2020/blob/master/MICRODADOS_ENEM_2019_SAMPLE_43278.csv?raw=true"

dados = pd.read_csv(fonte)
dados.head()

dados.shape

dados["SG_UF_RESIDENCIA"]

dados.columns.values

dados[["SG_UF_RESIDENCIA", "Q025"]]

dados["SG_UF_RESIDENCIA"].unique()

len(dados["SG_UF_RESIDENCIA"].unique())

dados["SG_UF_RESIDENCIA"].value_counts()

dados["NU_IDADE"].value_counts()

dados["NU_IDADE"].value_counts().sort_index()



dados["NU_IDADE"].hist()

dados["NU_IDADE"].hist(bins = 25,figsize = (10,8))

len(dados["NU_IDADE"])

(dados["NU_IDADE"].value_counts().sort_index() / len(dados["NU_IDADE"])*100)

dados["NU_IDADE"].sort_values()

dados[["NU_IDADE","SG_UF_RESIDENCIA"]].sort_values("NU_IDADE")

dados.query("IN_TREINEIRO == 1")["IN_TREINEIRO"]

dados.query("IN_TREINEIRO == 1")["NU_IDADE"].value_counts().sort_index()

dados["NU_NOTA_REDACAO"].hist(bins = 25, figsize = (10,8))

dados["NU_NOTA_LC"].hist(bins = 20, figsize = (10,8))

dados["NU_NOTA_REDACAO"].mean()

dados["NU_NOTA_REDACAO"].std()

provas = ["NU_NOTA_REDACAO","NU_NOTA_CN","NU_NOTA_CH","NU_NOTA_MT","NU_NOTA_LC"]

dados[provas].describe()

dados["NU_NOTA_LC"].plot.box(grid = True, figsize=(10,8))

dados[provas].boxplot(grid = True, figsize=(10,8))

"""Desafio01: Proporção de incritos por idade.

Desafio02: Descrobrir de quais estados são os incritos com 13 anos.

Desafio03: Adicionar titulo no gráfico

Desafio04: Plotas os histogramas das idades dos treineiros e não treineiros

Desafio05: Comparar as distriguições das provas em inglês e espanhol

Desafio06: Explorar a documentação matsplotlib e brincar com as visualizações

Desafio 01
"""

dados["NU_IDADE"].value_counts().sort_index() / len(dados["NU_IDADE"])*100

"""Desafio 02"""

dados[["NU_IDADE","SG_UF_RESIDENCIA"]].sort_values("NU_IDADE")

"""Desafio 03"""

dados["NU_NOTA_REDACAO"].hist(bins=25,figsize=(10,8)).set_title('Nota Redação 2019')

"""Desafio 04"""

dados.query("IN_TREINEIRO == 1")["NU_IDADE"].value_counts().sort_index()

(dados.query("IN_TREINEIRO == 1")["NU_IDADE"].value_counts().sort_index()).hist(bins=20)

dados.query("IN_TREINEIRO == 1")["NU_IDADE"].hist(figsize=(10,8),bins=20)

grafico = dados.query("IN_TREINEIRO == 1")["NU_IDADE"].hist(figsize=(10,8),bins=30)
grafico.set_xticks([15,18,20,30])
grafico.set_title('Incritos no ENEM 2019 como treineiros por idade')

grafico = dados.query("IN_TREINEIRO == 0")["NU_IDADE"].hist(figsize=(10,8),bins=30)
grafico.set_xticks([15,18,20,30])
grafico.set_title('Incritos no ENEM 2019 como não treineiros por idade')

"""Desafio 05"""

dados["NU_NOTA_LC"].hist()

dados["TP_LINGUA"].value_counts()

ingles = dados.query("TP_LINGUA == 0")["NU_NOTA_LC"]
espanhol = dados.query("TP_LINGUA == 1")["NU_NOTA_LC"]
ingles.plot.box()

espanhol.plot.box()

teste = pd.DataFrame({
    "ingles":dados.query("TP_LINGUA == 0")["NU_NOTA_LC"],
    "espanhol":dados.query("TP_LINGUA == 1")["NU_NOTA_LC"]
})

caixa = teste.boxplot(grid=True,figsize=(10,8),color="blue")
caixa.set_title('Notas provas de Inglês e Espanhol')

"""Desafio 06"""

dados["NU_NOTA_REDACAO"]

dados.query("NU_IDADE < 18")[["NU_IDADE","NU_NOTA_REDACAO"]].sort_values("NU_IDADE")

maiores_menores = pd.DataFrame({
    "Menores":dados.query("NU_IDADE < 18")["NU_NOTA_REDACAO"],
    "Maiores":dados.query("NU_IDADE >= 18")["NU_NOTA_REDACAO"]
})

box = maiores_menores.boxplot(grid=True,figsize=(10,8),color="blue")
box.set_title("Notas de redação dos menores de idade x maiores de idade")

sns.displot(dados, x="NU_IDADE", hue="TP_LINGUA", aspect = 2, legend = False, kind = 'kde', fill = True)
plt.legend(loc='upper right', labels=['Espanhol', 'Inglês'])
plt.title('Escolha da lingua por idade')
plt.show()